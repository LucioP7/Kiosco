@page "/localidades"
@inject IGenericService<Localidad> LocalidadService
@inject SweetAlertService Swal

<TitlePage Title="Localidades"/>

@if (localidades != null)
{
    <NavLink href="agregarlocalidad">
        Agregar Localidad
    </NavLink>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var localidad in localidades)
            {
                <tr>
                    <td>@localidad.Id</td>
                    <td>@localidad.Nombre</td>
                    <td>
                        <a href="/editarlocalidad?IdLocalidadEditada=@localidad.Id">Editar</a>
                    </td>
                    <td>
                        <button title="Eliminar" class="btn btn-danger" @onclick="@(()=>Elimnar(localidad))">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p><em>Cargando...</em></p>
}

@code {
    private List<Localidad>? localidades;

    protected override async Task OnInitializedAsync()
    {
        localidades = await LocalidadService.GetAllAsync();
    }

    private async Task Elimnar(Localidad localidad)
    {
        SweetAlertResult respuesta = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Borrando Localidad",
                Text = $"¿Está seguro que desea borrar a la localidad {localidad.Nombre}",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Si, quiero borrarlo!",
                CancelButtonText = "No, espera"
            });
        @if (respuesta.IsConfirmed)
        {
            await LocalidadService.DeleteAsync(localidad.Id);
            localidades = await LocalidadService.GetAllAsync();
            StateHasChanged();

        }
    }
}